//========================================================================================
//  
//  $File: //depot/devtech/14.0/plugin/source/sdksamples/strokeweightmutator/StrMutActionComponent.cpp $
//  
//  Owner: Adobe Developer Technologies
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2018/09/10 00:46:19 $
//  
//  $Revision: #2 $
//  
//  $Change: 1031899 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//========================================================================================

#include "VCPlugInHeaders.h"

// Interface includes:

// General includes:
#include "SDKUtilities.h"
#include "CActionComponent.h"
#include "CAlert.h"

// Project includes:
#include "StrMutID.h"

/** Implements an action component, IActionComponent, defining
	the actions that are executed when this plug-in's menu items
	are chosen.

	
	@ingroup strokeweightmutator
*/
class StrMutActionComponent : public CActionComponent
{
	public:
		/**
			Constructor.
			@param boss interface ptr from boss object on which this interface is aggregated.
		*/
		StrMutActionComponent(IPMUnknown* boss);

		/** Called by the framework when the action is to be performed.
			@param ac context in which action is to be performed.
			@param actionID identifies the action that was selected.
			@param mousePoint contains the global mouse location at time of event causing action
			(e.g. context menus). kInvalidMousePoint if not relevant.
			@param widget
		 */
		virtual void	DoAction(IActiveContext* ac, ActionID actionID, GSysPoint mousePoint, IPMUnknown* widget);

	private:
		/** Encapsulates functionality for the about menu item. */
		void DoAbout();

};

/* Makes the implementation available to the application.
*/
CREATE_PMINTERFACE(StrMutActionComponent, kStrMutActionComponentImpl)

/* Constructor
*/
StrMutActionComponent::StrMutActionComponent(IPMUnknown* boss)
: CActionComponent(boss)
{
}

/*
*/
void StrMutActionComponent::DoAction(IActiveContext* ac, ActionID actionID, GSysPoint mousePoint, IPMUnknown* widget)
{
	switch (actionID.Get())
	{
		case kStrMutPopupAboutThisActionID:
		case kStrMutAboutActionID:
		{
			this->DoAbout();
			break;
		}

		default:
		{
			break;
		}
	}
}

/*
*/
void StrMutActionComponent::DoAbout()
{
	CAlert::ModalAlert
	(
		kStrMutAboutBoxStringKey,		// Alert string
		kOKString, 						// OK button
		kNullString, 					// No second button
		kNullString, 					// No third button
		1,								// Set OK button to default
		CAlert::eInformationIcon		// Information icon.
	);
}

//  Generated by Dolly build 17: template "IfPanelMenu".
// End, StrMutActionComponent.cpp.

