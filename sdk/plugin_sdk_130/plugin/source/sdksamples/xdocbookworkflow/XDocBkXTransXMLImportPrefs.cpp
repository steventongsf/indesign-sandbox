//========================================================================================
//  
//  $File: //depot/devtech/14.0/plugin/source/sdksamples/xdocbookworkflow/XDocBkXTransXMLImportPrefs.cpp $
//  
//  Owner: Adobe Developer Technologies
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2018/09/10 00:46:19 $
//  
//  $Revision: #2 $
//  
//  $Change: 1031899 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//========================================================================================

#include "VCPlugInHeaders.h"

// Interface includes
#include "IXMLImportOptionsPool.h"

// General includes
#include "CXMLImportPreferences.h"
// Project includes
#include "XDocBkID.h"

/** Implementation of IXMLImportPreferences for service that provides an
	XML transformer

	@see IXMLImportPreferences
	@ingroup xdocbookworkflow

*/
class XDocBkXTransXMLImportPrefs : public CXMLImportPreferences
{
public:	

	/**	Constructor
		@param boss reference to boss object aggregating this implementation
	 */
	XDocBkXTransXMLImportPrefs(IPMUnknown *boss);
	
	/**	@see IXMLImportPreferences::Initialize
		@param pool 
	 */
	virtual void Initialize(IXMLImportOptionsPool *pool);
};

CREATE_PMINTERFACE(XDocBkXTransXMLImportPrefs, kXDocBkXTransXMLImportPrefsImpl)


XDocBkXTransXMLImportPrefs::XDocBkXTransXMLImportPrefs(IPMUnknown *boss) :
CXMLImportPreferences(boss)
{}

/*
*/
void XDocBkXTransXMLImportPrefs::Initialize(IXMLImportOptionsPool *pool)
{
	if (fPool != pool)
	{
		// First initialize the fPool member for later access.
		fPool.reset(pool);
		if(fPool) {
			fPool->AddRef();
		}
		// Turn these two on by default, so that XSLT transform will be applied, and override PI
		CXMLImportPreferences::AddPreference(WideString(kXDocBkXTransXMLImportPrefsKey), IXMLImportPreferences::kBool16, -1, kTrue);
		CXMLImportPreferences::AddPreference(WideString(kXDocBkXSLSuppliedOverridesPIPrefsKey), IXMLImportPreferences::kBool16, -1, kTrue);
	}
}

//  Code generated by DollyXS code generator
