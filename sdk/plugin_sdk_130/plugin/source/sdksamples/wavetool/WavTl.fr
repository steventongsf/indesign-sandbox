//========================================================================================
//  
//  $File: //depot/devtech/14.0/plugin/source/sdksamples/wavetool/WavTl.fr $
//  
//  Owner: Adobe Developer Technologies
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2018/09/10 00:46:19 $
//  
//  $Revision: #2 $
//  
//  $Change: 1031899 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//  
//  Umbrella include file for all the .fr files in the plug-in.
//  
//========================================================================================

//===========================
//  General includes:
//===========================

#include "MenuDef.fh"
#include "ActionDef.fh"
#include "ActionDefs.h"
#include "AdobeMenuPositions.h"
#include "Tool.fh"
#include "ToolBoxDefs.h"
#include "LocaleIndex.h"
#include "PMLocaleIds.h"
#include "StringTable.fh"
#include "objectmodeltypes.fh"
#include "ShuksanID.h"
#include "ActionID.h"
#include "CommandID.h"
#include "WorkspaceID.h"
#include "widgetid.h"
#include "BuildNumber.h"
#include "ToolboxID.h"
#include "CursorID.h"
#include "GraphicsID.h"
#include "LayoutUIID.h"
#include "ScriptInfoTypes.fh"

#include "PlugInModel_UIAttributes.h"
// Project includes:
#include "WavTlID.h"
#include "WavTlScriptingDefs.h"
#include "WavTlRezDefs.h"

#ifdef __ODFRC__

//================================================================================
// Plugin version definition.
//================================================================================
resource PluginVersion (kSDKDefPluginVersionResourceID)
{
	kTargetVersion,
	kWavTlPluginID,
	kSDKDefPlugInMajorVersionNumber, kSDKDefPlugInMinorVersionNumber, 	
	kSDKDefHostMajorVersionNumber, kSDKDefHostMinorVersionNumber,
	kWavTlCurrentMajorFormatNumber, kWavTlCurrentMinorFormatNumber,
	{ kInDesignProduct, kInCopyProduct }, 
	{ kWildFS },
	kUIPlugIn,
	kWavTlVersion
};

//================================================================================
//	Boss class definition.
//================================================================================
resource ClassDescriptionTable(kSDKDefClassDescriptionTableResourceID)
{{{

	/** Provides the actions invoked by this plug-in's menu items. 
		@ingroup wavetool
	*/
	Class
	{
		kWavTlActionComponentBoss,
		kBaseActionComponentBoss,
		{
			/** Handles the plug-in's actions, see WavTlActionComponent.
			 */
			IID_IACTIONCOMPONENT, kWavTlActionComponentImpl,
		}
	},

	/** Registers this plug-in's trackers with the application.
	
		@ingroup wavetool
	*/
	Class
	{
		kWavTlTrackerRegisterBoss,
		kInvalidClass,
		{
			/** See WaveTrackerRegister.
			*/
			IID_ITRACKERREGISTER, kWavTlTrackerRegisterImpl,
			/** Identifies a tracker register service, implementation provided by the API.
			*/
			IID_IK2SERVICEPROVIDER, kCTrackerRegisterProviderImpl,
		}
	},

	/** Provides the saw wave tool. 
	
		@ingroup wavetool
	*/
	Class
	{
		kSawWaveToolBoss,
		kGenericToolBoss,
		{
			/** See SawWaveTool. 
			 */
			IID_ITOOL, kSawWaveToolImpl,
			/** Provides a creation cursor when the tool is in use, the standard creation cursor implementation provided by the API is used.
			 */
			IID_ICURSORPROVIDER, kCreationCursorProviderImpl,
		}
	},

	/** Provides the saw wave tool's tracker. 
		@ingroup wavetool
	*/
	Class
	{
		kSawWaveTrackerBoss,
		kInvalidClass,
		{
			/** See SawWaveTracker.
			 */
			IID_ITRACKER, kSawWaveTrackerImpl,
			/** Forwards events into the tracker. 
				Implementation provided by the API.
			 */
			IID_IEVENTHANDLER, kCTrackerEventHandlerImpl,
			/** Draws the shape of the path that will be created on mouse up as
				the mouse is dragged, implementation provided by the API.
			 */
			IID_ISPRITE, kNoHandleSpriteImpl,
			/** Describes the geometry of the path that will be created on mouse up as 
				the mouse is dragged, implementation provided by the API.
			 */
			IID_IPATHGEOMETRY, kPathGeometryImpl,		
		}
	},

	/** Provides the sine wave tool. 
		@ingroup wavetool
	*/
	Class
	{
		kSineWaveToolBoss,
		kGenericToolBoss,
		{
			/** See SineWaveTool. 
			 */
			IID_ITOOL, kSineWaveToolImpl,
			/** Provides a creation cursor when the tool is in use, the standard creation cursor implementation provided by the API is used.
			 */
			IID_ICURSORPROVIDER, kCreationCursorProviderImpl,
		}
	},

	/** Provides the sine wave tool's tracker. 
		@ingroup wavetool
	*/
	Class
	{
		kSineWaveTrackerBoss,
		kInvalidClass,
		{
			/** See SineWaveTracker.
			 */
			IID_ITRACKER, kSineWaveTrackerImpl,
			/** Forwards events into the tracker, implementation provided by the API.
			 */
			IID_IEVENTHANDLER, kCTrackerEventHandlerImpl,
			/** Draws the shape of the path that will be created on mouse up as
				the mouse is dragged, implementation provided by the API.
			 */
			IID_ISPRITE, kNoHandleSpriteImpl,
			/** Describes the geometry of the path that will be created on mouse up as 
				the mouse is dragged, implementation provided by the API.
			 */
			IID_IPATHGEOMETRY, kPathGeometryImpl,		
		}
	}

}}};

//================================================================================
// Implementation definition.
//================================================================================
resource FactoryList (kSDKDefFactoryListResourceID) 
{
	kImplementationIDSpace,
	{
#include "WavTlFactoryList.h"
	}
};

//================================================================================
// Menu definition.
//================================================================================
resource MenuDef (kSDKDefMenuResourceID)
{
	{
		// The About Plug-ins sub-menu item for this plug-in.
		kWavTlAboutActionID,			// ActionID (kInvalidActionID for positional entries)
		kWavTlAboutMenuPath,			// Menu Path.
		kSDKDefAlphabeticPosition,			// Menu Position.
		kSDKDefIsNotDynamicMenuFlag,		// kSDKDefIsNotDynamicMenuFlag or kSDKDefIsDynamicMenuFlag.

	}
};

//================================================================================
// Action definition.
//================================================================================
resource ActionDef (kSDKDefActionResourceID)
{
	{ 
		kWavTlActionComponentBoss, 		// ClassID of boss class that implements the ActionID.
		kWavTlAboutActionID,	// ActionID.
		kWavTlAboutMenuKey,	// Sub-menu string.
		kHelpMenuActionArea,				// Area name (see ActionDefs.h).
		kNormalAction,					// Type of action (see ActionDefs.h).
		kDisableIfLowMem,				// Enabling type (see ActionDefs.h).
		kInvalidInterfaceID,			// Selection InterfaceID this action cares about or kInvalidInterfaceID.
		kSDKDefInvisibleInKBSCEditorFlag, // kSDKDefVisibleInKBSCEditorFlag or kSDKDefInvisibleInKBSCEditorFlag.

	}
};

//========================================================================================
// Tool Definitions.
//========================================================================================
resource ToolDef (kIconSawToothWave)
{
	kSawWaveToolBoss,			// classID for tool boss
	kPointerToolBoss,			// classID for tool type(boss of default tool for this type)
	kDoesNotApply,				// classID for parent tool boss
	kSixthAdobeToolsGroup + 1,	// group number -- was kLayoutToolsGroup in 1.0, is kSixthAdobeToolsGroup in 1.5.
	kFirstAdobeTool,			// tool number
	kDoesNotApply,				// subtool number
	kSawWaveToolActionID,		// action ID associated with shortcut - need to look into this some more				
	kIconSawToothWave,			// Icon ID
	kWavTlPluginID,				// plug-in ID
	kADBEIconSuiteButtonType
};

resource ToolDef (kIconSineWave)
{
	kSineWaveToolBoss,
	kPointerToolBoss,
	kSawWaveToolBoss,
	kDoesNotApply,
	kDoesNotApply,
	kFirstAdobeTool,
	kSineWaveToolActionID,	
	kIconSineWave, 
	kWavTlPluginID,
	kADBEIconSuiteButtonType
};

//================================================================================
// LocaleIndex (Strings)
//================================================================================
//------------------------------------------------------------
// LocaleIndex
// The LocaleIndex should have indicies that point at your
// localizations for each language system that you are 
// localized for.
//------------------------------------------------------------
resource LocaleIndex (kSDKDefStringsResourceID)
{
	kStringTableRsrcType,
	{
		kWildFS, k_enUS, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_jaJP, kSDKDefStringsResourceID + index_jaJP
		
		kWildFS, k_Wild, kSDKDefStringsResourceID + index_enUS
	}
};

resource LocaleIndex (kSDKDefStringsNoTransResourceID)
{
	kStringTableRsrcType,
	{
		kWildFS, k_Wild, kSDKDefStringsNoTransResourceID + index_enUS
	}
};

resource StringTable (kSDKDefStringsNoTransResourceID + index_enUS)
{
	k_enUS,									// Locale Id
	kEuropeanMacToWinEncodingConverter,		// Character encoding converter
	{
		// No-Translate strings go here:		


	}
};
/*
// Add the ScriptID that identifies the tool to kkToolBoxEnumScriptElement
*/
resource VersionedScriptElementInfo( 10 ) 
{ 
	//Contexts 
	{ 
		kCS5ScriptVersion, kCoreScriptManagerBoss, kInDesignAllLanguagesFS,k_Wild, 
	} 
	//Elements 
	{ 
		Enumerator 
		{ 
			kToolBoxEnumScriptElement,
			{ 
				en_SineWaveTl,      "sine wave tool",	"The sine wave tool.",
				en_SawWaveTl,		"saw wave tool", 	"The saw wave tool.", 
			}
		},
	} 
};

#endif // __ODFRC__

#include "WavTl_enUS.fr"
#include "WavTl_jaJP.fr"
#include "WavTlIcons.fr"
