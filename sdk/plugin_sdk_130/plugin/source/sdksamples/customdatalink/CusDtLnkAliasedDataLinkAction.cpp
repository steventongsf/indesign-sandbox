//========================================================================================
//  
//  $File: //depot/devtech/14.0/plugin/source/sdksamples/customdatalink/CusDtLnkAliasedDataLinkAction.cpp $
//  
//  Owner: Adobe Developer Technologies
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2018/09/10 00:46:19 $
//  
//  $Revision: #2 $
//  
//  $Change: 1031899 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//========================================================================================

#include "VCPlugInHeaders.h"

// Interface includes:
// Imp includes
#include "PageItemDataLinkAction.h"
#include "UIDList.h"
// Project includes
#include "CusDtLnkID.h"

/** Implements IDataLinkAction based on implementation in SDK, 
	PageItemDataLinkAction. 
	
	@ingroup customdatalink

*/
class CusDtLnkAliasedDataLinkAction : public PageItemDataLinkAction
{
public:
	/** Constructor */
	CusDtLnkAliasedDataLinkAction(IPMUnknown*);

	/** Destructor */
	virtual ~CusDtLnkAliasedDataLinkAction();

	/** See IDataLinkAction::GotoLink */
	virtual ErrorCode  GotoLink(PMString* errorString);

	/** See IDataLinkAction::EnableGotoLink */
	virtual bool16  EnableGotoLink();
};


// Note: PageItemDataLinkAction is-a CPMUnknown<IDataLinkAction>, so if we extend that C++ class,
// then we get the AddRef... etc from PageItem... so don't need HELPER_XYZ etc
/*
*/
CREATE_PMINTERFACE(CusDtLnkAliasedDataLinkAction, kCusDtLnkAliasedDataLinkActionImpl)


CusDtLnkAliasedDataLinkAction::CusDtLnkAliasedDataLinkAction(IPMUnknown* boss) 
: PageItemDataLinkAction(boss)
{

}

CusDtLnkAliasedDataLinkAction::~CusDtLnkAliasedDataLinkAction()
{

}

ErrorCode  CusDtLnkAliasedDataLinkAction::GotoLink(PMString* errorString)
{
	const char* methodName = "CusDtLnkAliasedDataLinkAction::GotoLink\n";
	TRACEFLOW(kCusDtLnkPluginName, methodName);
	ErrorCode defaultRetval = PageItemDataLinkAction::GotoLink(errorString);
	// The default impl uses ILinkObjectReference on this boss object to find the
	// associated page item or other object (like XML element)
	// and then delegates to IShowPageItem::Show

	
	return defaultRetval;
}

bool16  CusDtLnkAliasedDataLinkAction::EnableGotoLink()
{
	const char* methodName = "CusDtLnkAliasedDataLinkAction::EnableGotoLink\n";
	bool16 defaultRetval = PageItemDataLinkAction::EnableGotoLink();
	TRACEFLOW(kCusDtLnkPluginName, methodName);
		// Default impl just determines if there is an associated page item or
	// other object; it uses ILinkObjectReference on this boss object
	// to find the associated page item (if any) or other object (say, XML element)
	return defaultRetval;
}

//  Code generated by DollyXS code generator
