//========================================================================================
//  
//  $File: //depot/devtech/14.0/plugin/source/sdksamples/inxerrorlogging/INXErrLog.fr $
//  
//  Owner: Adobe Developer Technologies
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2018/09/10 00:46:19 $
//  
//  $Revision: #2 $
//  
//  $Change: 1031899 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//========================================================================================

#include "VCPlugInHeaders.h"

// General includes:


#include "AdobeMenuPositions.h"
#include "LocaleIndex.h"
#include "PMLocaleIds.h"
#include "StringTable.fh"
#include "objectmodeltypes.fh"
#include "ShuksanID.h"
#include "CommandID.h"
#include "WorkspaceID.h"
#include "BuildNumber.h"
#include "ScriptingID.h" // for kBaseScriptProviderBoss
#include "ScriptInfoTypes.fh" // for VersionedScriptElementInfo
#include "AppFrameworkID.h"
// Project includes:
#include "INXErrLogID.h"
#include "GenericID.h"
#include "ShuksanID.h"
#include "TextID.h"
#include "INXCoreID.h"
#include "INXErrLogScriptingDefs.h"

#include "PlugInModel_UIAttributes.h"

#ifdef __ODFRC__

/*  Plugin version definition.
*/
resource PluginVersion (kSDKDefPluginVersionResourceID)
{
	kTargetVersion,
	kINXErrLogPluginID,
	kSDKDefPlugInMajorVersionNumber, kSDKDefPlugInMinorVersionNumber,
	kSDKDefHostMajorVersionNumber, kSDKDefHostMinorVersionNumber,
	kINXErrLogCurrentMajorFormatNumber, kINXErrLogCurrentMinorFormatNumber,
	{ kInDesignProduct, kInCopyProduct, kInDesignServerProduct},
	{ kWildFS },
	kModelPlugIn,
	kINXErrLogVersion
};

/*  The ExtraPluginInfo resource adds extra information to the Missing Plug-in dialog
	that is popped when a document containing this plug-in's data is opened when
	this plug-in is not present. These strings are not translatable strings
	since they must be available when the plug-in isn't around. They get stored
	in any document that this plug-in contributes data to.
*/
resource ExtraPluginInfo(1)
{
	kINXErrLogCompanyValue,			// Company name
	kINXErrLogMissingPluginURLValue,	// URL 
	kINXErrLogMissingPluginAlertValue,	// Missing plug-in alert text
};

/* Boss class definition.
*/
resource ClassDescriptionTable(kSDKDefClassDescriptionTableResourceID)
{{{
	
	/**
	 This boss class logs INX import/export error messages
	 
	 @ingroup inxerrorlogging.sdk
	*/
	Class
	{
        kSDKINXErrorHandlerBoss,
        kInvalidClass,
        {
            IID_IINXERRORHANDLER, kSDKINXErrorHandlerImpl,
            
			/** IStringData implementation, to store a non-persistent filename 
			*/ 
            IID_INXERRORPATHGDATA, kStringDataImpl,
        }
	},	

	
	/** Handles scripting of INXErrLog's properties.       
        @ingroup inxerrorlogging.sdk
	 */
    Class
	{
		kINXErrLogScriptProviderBoss,
		kBaseScriptProviderBoss,
		{
			/** See IScriptProvider / INXErrLogScriptProvider.
			 */
			IID_ISCRIPTPROVIDER, kINXErrLogScriptProviderImpl,
		}
	},
	
	/** Puts facade onto the Utils boss to let client code use it. 
		@ingroup inxerrorlogging.sdk
	*/
    AddIn
    {
        kUtilsBoss,
        kInvalidClass,
        {
            IID_INXERRLOGFACADE, kINXErrLogFacadeImpl	,           
        }
    },

}}};

/*  Implementation definition.
*/
resource FactoryList (kSDKDefFactoryListResourceID)
{
	kImplementationIDSpace,
	{
		#include "INXErrLogFactoryList.h"
	}
};


/*  LocaleIndex
	The LocaleIndex should have indicies that point at your
	localizations for each language system that you are localized for.
*/
/*  String LocaleIndex.
*/
resource LocaleIndex ( kSDKDefStringsResourceID)
{
	kStringTableRsrcType,
	{
		kWildFS, k_enUS, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_enGB, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_deDE, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_frFR, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_esES, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_ptBR, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_svSE, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_daDK, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_nlNL, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_itIT, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_nbNO, kSDKDefStringsResourceID + index_enUS
		kWildFS, k_fiFI, kSDKDefStringsResourceID + index_enUS
		kInDesignJapaneseFS, k_jaJP, kSDKDefStringsResourceID + index_jaJP
	}
};

resource LocaleIndex (kSDKDefStringsNoTransResourceID)
{
	kStringTableRsrcType,
	{
		kWildFS, k_Wild, kSDKDefStringsNoTransResourceID + index_enUS
	}
};

resource StringTable (kSDKDefStringsNoTransResourceID + index_enUS)
{
	k_enUS,									// Locale Id
	kEuropeanMacToWinEncodingConverter,		// Character encoding converter
	{
		// No-Translate strings go here:

	}
};

/*
// Scripting definition.
*/
resource VersionedScriptElementInfo(1)
{
	//Contexts
	{
		kCS4ScriptVersion, kCoreScriptManagerBoss, kInDesignAllLanguagesFS, k_Wild,
		kCS4ScriptVersion, kCoreScriptManagerBoss, kInDesignServerAllLanguagesFS, k_Wild,
	}
	
	//Elements
	{		
		
		Property
		{
			kINXErrLogOnOffElement,
			p_INXErrLogOnOff,
			"inxerrlog on",
			"INXError handler and log on/off setting",
			BoolType,
			{}
			kNoAttributeClass,
		},

		// Connects this plug-in's properties to scripting and INX round trip.
		Property
		{
			kINXErrLogPathElement,
			p_INXErrLogPath,
			"inxerrlog path",
			"INXError log path",
			StringType,
			{}
			kNoAttributeClass,
		},
		
		
		Provider
        {
            kINXErrLogScriptProviderBoss,
            {
                Object{ kApplicationObjectScriptElement },
                

                // the inx errlog on/off property
                Property{ kINXErrLogOnOffElement, kReadWrite },
                // the inx errlog path property
                Property{ kINXErrLogPathElement, kReadWrite },
            }
        }


	}
};




#endif // __ODFRC__

#include "INXErrLog_enUS.fr"
#include "INXErrLog_jaJP.fr"

//  Code generated by DollyXs code generator
