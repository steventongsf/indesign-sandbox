//========================================================================================
//  
//  $File: //depot/devtech/14.0/plugin/source/open/components/conditionaltextui/resources/ConditionalTextUIViews.fr $
//  
//  Owner: Michele Stutzman
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2018/09/10 00:46:19 $
//  
//  $Revision: #2 $
//  
//  $Change: 1031899 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//========================================================================================

#include "Widgets.fh"
#include "SysControlIds.h"
#include "LocaleIndex.h"
#include "IDList.fh"           // source\public\includes         - ODFRC type def for IDList
#include "IDListPair.fh"       // source\public\includes         - ODFRC type def for IDListPair
#include "PMLocaleIds.h"
#include "IControlViewDefs.h"
#include "IconRsrcDefs.h"
#include "AppFrameworkID.h"			// kApplicationRsrcPluginID
#include "ConditionalTextUIID.h"	
#include "IconStyleDefs.h"		
#include "TreeViewDefs.h"
#include "EveInfo.fh"

#ifdef __ODFRC__

//========================================================================================
// TYPES
//========================================================================================

type ConditionalTextUIPanelWidget		(kViewRsrcType) : ErasablePrimaryResourcePanelWidget	(ClassID = kConditionalTextUIPanelBoss) 
{
	CPanelMenuData;
	SizePanelDetailController;
};

type ConditionTagListTreeViewWidget		(kViewRsrcType) : TreeViewWidget			(ClassID = kConditionTagListTreeViewWidgetBoss)	
{ 
	CControlViewObservers;
};
type ConditionTagTreeViewNodeWidget(kViewRsrcType) : StandardTreeNodeWidget (ClassID = kConditionTagTreeViewNodeWidgetBoss) {};
type NoConditionTagTreeViewNodeWidget(kViewRsrcType) : StandardTreeNodeWidget (ClassID = kNoConditionTagTreeViewNodeWidgetBoss) {};

type ConditionTagEyeballWidget		(kViewRsrcType) : RollOverIconButtonWidget		(ClassID = kConditionTagEyeballWidgetBoss) {};
type ConditionTagNameILEWidget		(kViewRsrcType) : TextInLineEditWidget	(ClassID = kConditionTagNameILEBoss) {};

// OPPORTUNITSTIC: Change to a kInLineEditContainerWidgetBoss, drop-down to choose ui color. 
type ConditionTagUIColorSwatchWidget(kViewRsrcType) : UIColorSwatchWidget (ClassID = kConditionTagUIColorSwatchWidgetBoss) {};

type NewConditionTagButtonWidget	(kViewRsrcType) : RollOverIconButtonWidget		(ClassID = kNewConditionTagButtonBoss) {};
type NewConditionSetButtonWidget (kViewRsrcType) : RollOverIconButtonWidget		(ClassID = kNewConditionSetButtonBoss) {};
type DeleteConditionTagButtonWidget	(kViewRsrcType) : RollOverIconButtonWidget		(ClassID = kDeleteConditionTagButtonBoss) {};

type ConditionTagOptionsDialog(kViewRsrcType) : DialogBoss (ClassID = kConditionTagOptionsDialogBoss) 
{
	WidgetEveInfo; 
};

type ConditionTagDeleteDialog(kViewRsrcType) : DialogBoss (ClassID = kConditionTagDeleteDialogBoss) 
{
	WidgetEveInfo; 
};

type ConditionSetNameDialog(kViewRsrcType) : DialogBoss (ClassID = kConditionSetNameDialogBoss) 
{
	WidgetEveInfo; 
};

type ShowConditionIndicatorsDropDownWidget(kViewRsrcType) : DropDownListWidget(ClassID = kShowConditionIndicatorsDropDownBoss) {};

type ConditionSetsDropDownWidget (kViewRsrcType) : DropDownListWidget (ClassID = kConditionSetsDropDownWidgetBoss) {};

type ConditionAppliedIcon	(kViewRsrcType) : IconSuiteWidget		(ClassID = kConditionAppliedIconBoss) {};

type ConditionStatusTextWidget (kViewRsrcType) : StaticTextWidget (ClassID = kConditionStatusTextWidgetBoss) {};

//========================================================================================
// RESOURCES Local Index
//========================================================================================

resource LocaleIndex (kConditionalTextUIPanelRsrcID)
{
	kViewRsrcType,
	{
		kWildFS, k_Wild, kConditionalTextUIPanelRsrcID + index_enUS,
		kWildFS, k_deDE, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_frFR, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_jaJP, kConditionalTextUIPanelRsrcID + index_jaJP,
		kWildFS, k_esES, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_ptBR, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_svSE, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_daDK, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_nlNL, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_itIT, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_nbNO, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_fiFI, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_koKR, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_zhCN, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_zhTW, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_csCZ, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_plPL, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_huHU, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_ruRU, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_trTR, kConditionalTextUIPanelRsrcID + index_deDE,
		kWildFS, k_ukUA, kConditionalTextUIPanelRsrcID + index_deDE,
	}
}


resource LocaleIndex (kConditionTagTreeViewNodeRsrcID)
{
	kViewRsrcType,
	{
		kWildFS, k_Wild, kConditionTagTreeViewNodeRsrcID + index_enUS,
	}
}

resource LocaleIndex (kNoConditionTagTreeViewNodeRsrcID)
{
	kViewRsrcType,
	{
		kWildFS, k_Wild, kNoConditionTagTreeViewNodeRsrcID + index_enUS,
	}
}

resource LocaleIndex (kConditionTagOptionsDialogRsrcID)
{
	kViewRsrcType,
	{
		kWildFS, k_Wild, kConditionTagOptionsDialogRsrcID + index_enUS
	}
}

resource LocaleIndex (kConditionTagDeleteDialogRsrcID)
{
	kViewRsrcType,
	{
		kWildFS, k_Wild, kConditionTagDeleteDialogRsrcID + index_enUS
	}
}

resource LocaleIndex (kConditionSetNameDialogRsrcID)
{
	kViewRsrcType,
	{
		kWildFS, k_Wild, kConditionSetNameDialogRsrcID + index_enUS
	}
}


#endif // __ODFRC__

#include "ConditionalTextUIViews_enUS.fr"
#include "ConditionalTextUIViews_jaJP.fr"
#include "ConditionalTextUIViews_deDE.fr"
