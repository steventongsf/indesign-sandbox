//========================================================================================
//  
//  $File: //depot/devtech/14.0/plugin/source/public/interfaces/xmedia/IDOMServices.h $
//  
//  Owner: Ryan Gano
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2018/09/10 00:46:19 $
//  
//  $Revision: #2 $
//  
//  $Change: 1031899 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//========================================================================================

#ifndef __IDOMServices_h__
#define __IDOMServices_h__

#include "IPMUnknown.h"
#include "XMLParserID.h"

class IIDXMLDOMDocument;
class ISAXDTDHandler;
class ISAXEntityResolver;
class IXMLDTDTokenHandler;
class BaseProgressBar;

/**
A DOM-generating parser

This API should be used by applications wishing to parse XML
files to generate a DOM tree. One instance of this object
should be created for each XML document to be parsed.

Each IDOMServices object maintains a reference to the
IIDXMLDOMDocument generated by parsing XML.  Hanging on to the
IDOMServices instance is one way to keep the DOM tree alive.
Releasing the IDOMServices will reduce the reference count
on the document by one.  If the IDOMServices instance is the
last reference, the document will be deleted, and all memory
allocated to the DOM tree will be recovered.

<b>Invalid Parameters</b>

Unless otherwise indicated, it is an error to use an invalid
container (IsValid() == false), or a NULL pointer, as a
parameter to any function. In some instances, the requirement
that a specific parameter must be valid is repeated in the
commentary for the specific function. The lack of any
indication in the commentary for the specific function should
still be taken to mean that an invalid container or NULL
pointer will result in a kAXEErrClientFault exception.
*/
class IDOMServices : public IPMUnknown
{
public:
	enum { kDefaultIID = IID_IDOMSERVICES };

    /**
    Parse any XML document

    The application can use this method to instruct the DOM
    parser to begin parsing an XML document from a client defined
    stream.  This function returns when the XML file is
    completely parsed, or when an error or fatal error
    occurs.

	Applications may not invoke this method while a parse is in
    progress (they should create a new parser instead for each
    additional XML document).

    @param stream           The input stream for the top-level of the
							XML document.
	@param entityResolver	Required if the client needs to resolve external entities.
	@param dtdTokenHandler	The handler that handles DTD callbacks during 
							XML DTD parsing.
	@param progressBar		The progress bar to use during the parse.
    @return                 The IIDXMLDOMDocument object that
                            represents the entire XML document.
							Nil will be returned if there is
							no tree yet.
    */
	virtual IIDXMLDOMDocument* Parse(IPMStream* stream,
								ISAXEntityResolver* entityResolver = nil,
								IXMLDTDTokenHandler* dtdTokenHandler = nil,
								BaseProgressBar *progressBar = nil) = 0;
};
#endif