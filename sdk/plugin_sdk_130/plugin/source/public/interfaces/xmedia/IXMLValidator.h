//========================================================================================
//  
//  $File: //depot/devtech/14.0/plugin/source/public/interfaces/xmedia/IXMLValidator.h $
//  
//  Owner: Lonnie Millett
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2018/09/10 00:46:19 $
//  
//  $Revision: #2 $
//  
//  $Change: 1031899 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//========================================================================================

#pragma once
#ifndef __IXMLValidator__
#define __IXMLValidator__

#include "XMLID.h"
#include "XMLReference.h"
#include "XMLDTDValidationError.h"


/**	Interface for a performing validation and storing any resulting validation errors.

	@see XMLDTDValidationError
	@see XMLDTDValidateSuggest
*/
class IXMLValidator : public IPMUnknown
{
	public:
		enum { kDefaultIID = IID_IXMLVALIDATOR };

		/**
		   Validate the XML against a DTD. Note: Client must clear the errors before calling
		   Validate if they want to generate a completely new list. This method will append
		   new errors to the existing list.
		   @param startXMLRef XMLReference of the element to start the validation at. Use XML
		   document element to validate the entire XML
		   @see XMLDTDValidationError
		   @param maxErrors maximum number of errors to retrieve. Use -1 to get all the errors
		   @param treatAsRoot if startXMLRef is not the document element or the root element, 
		   whether to check startXMLRef against DOCTYPE root element type. This is used when 
		   validating from something other than the root, but still wants to treat the starting 
		   element as root
		   @param checkHasDTD if startXMLRef has no DTD reference, whether it should be flagged as
		   an error. Set this flag to kFalse, and XML without DTD will also "pass" the validation
		*/
		virtual void Validate(const XMLReference& startXMLRef, int32 maxErrors = 250, bool16 treatAsRoot = kFalse, bool16 checkHasDTD = kFalse) = 0;
		
		/**
		   Clear the most recent set of errors generated by a validate operation.
		*/
		virtual void ClearErrors() = 0;
		
		/**	Accessor for the number of errors generated by the last validation.  The number may be limited
			by the maximum number of errors allowed during the validation.
			
			@return  count of the validation errors
		 */
		virtual int32 GetErrorCount() const = 0;
		
		/**	Accessor for the validation error at the given index position
			@param pos zero-based index, 0 <= pos < GetErrorCount()
			@return XMLDTDValidationError
		 */
		virtual const XMLDTDValidationError& GetErrorAt(int32 pos) const = 0;

		/** Accessor for whether Validate() has been called since the last call to ClearErrors()
			@return bool16 whether Validate() has been called since the last call to ClearErrors()
		*/
		virtual bool16 Validated() const = 0;
};


#endif

