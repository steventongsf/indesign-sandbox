//========================================================================================
//  
//  $File: //depot/devtech/14.0/plugin/source/public/libs/widgetbin/includes/KitList.fh $
//  
//  Owner: Matt Ramme
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2018/09/10 00:46:19 $
//  
//  $Revision: #2 $
//  
//  $Change: 1031899 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//  
//  ADOBE CONFIDENTIAL
//  
//========================================================================================

#ifndef __KitList_fh__
#define __KitList_fh__

// type of palettes the kit can support.
#define kKitSupportsToolbar 1
#define kKitSupportsControlbar 2
#define kKitSupportsTabbedPalette   4


#include "CoreResTypes.h"
#include "PMTypes.fh"
#include "AppUIID.h"

#ifdef __ODFRC__

type KitList (kKitListRsrcType)
{
	integer;	// Default creation palette type for the kit (kKitSupportsToolbar,
				// kKitSupportsControlbar, or kKitSupportsTabbedPalette). Should be
				// consistent with the default defined for your KitViewData in your
				// view resource.
	
	longint = $$CountOf(Panels);
	array Panels
	{
		PMSysRsrcID;			// View resource id, plugin for panel
		integer 	kNotResizable = 0,
				kIsResizable =1; // is this panel resizable?
		longint;				// ActionID - a unique ActionID from your plugin's ID space			
		wstring;		// Panel name(used for Window menu). 
		wstring;		// Alternate menu path of the form "Main:Foo" if you want your palette menu item in a second place
		double;					// Alternate Menu position for determining menu order
		PMSysRsrcID;			// resource id, plugin id for a PNG resource for the palette icon
		unsigned longint;		// ScriptID for panel object (use c_Panel for generic behavior)
	}
};

#endif // __ODFRC__

#endif // __KitList_fh__
