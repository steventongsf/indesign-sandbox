//========================================================================================
//  
//  $File: //depot/devtech/14.0/plugin/source/public/components/server/gsoap/soapH.h $
//  
//  Owner: ???
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2018/09/10 00:46:19 $
//  
//  $Revision: #2 $
//  
//  $Change: 1031899 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//  
//  soapH.h
//  Generated by gSOAP 2.7.9l from /Users/lmillett/thyme/source/components/soapserver/server/SSLibFunctions.h
//  Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
//  This part of the software is released under one of the following licenses:
//  GPL, the gSOAP public license, or Genivia's license for commercial use.
//  
//========================================================================================

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (2)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef SOAP_TYPE_IDSP__NullObject
#define SOAP_TYPE_IDSP__NullObject (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__NullObject(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__NullObject(struct soap*, const long *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__NullObject(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_get_IDSP__NullObject(struct soap*, long *, const char*, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_IDSP__NullObject(struct soap*, const char*, long *, const char*);

#ifndef SOAP_TYPE_IDSP__Enumeration
#define SOAP_TYPE_IDSP__Enumeration (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__Enumeration(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__Enumeration(struct soap*, const long *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__Enumeration(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_get_IDSP__Enumeration(struct soap*, long *, const char*, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_IDSP__Enumeration(struct soap*, const char*, long *, const char*);

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__int(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__int(struct soap*, const long *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__int(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_get_xsd__int(struct soap*, long *, const char*, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_xsd__int(struct soap*, const char*, long *, const char*);

#ifndef SOAP_TYPE_long
#define SOAP_TYPE_long (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_long(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);

#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__long(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__long(struct soap*, const LONG64 *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__long(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__long(struct soap*, LONG64 *, const char*, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_xsd__long(struct soap*, const char*, LONG64 *, const char*);

#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

#ifndef SOAP_TYPE_xsd__float
#define SOAP_TYPE_xsd__float (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__float(struct soap*, float *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__float(struct soap*, const float *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_get_xsd__float(struct soap*, float *, const char*, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_xsd__float(struct soap*, const char*, float *, const char*);

#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_float(struct soap*, float *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);

#ifndef SOAP_TYPE_IDSP__Unit
#define SOAP_TYPE_IDSP__Unit (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__Unit(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__Unit(struct soap*, const double *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__Unit(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_get_IDSP__Unit(struct soap*, double *, const char*, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_IDSP__Unit(struct soap*, const char*, double *, const char*);

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__double(struct soap*, const double *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_get_xsd__double(struct soap*, double *, const char*, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_xsd__double(struct soap*, const char*, double *, const char*);

#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#ifndef SOAP_TYPE_IDSP__SessionID
#define SOAP_TYPE_IDSP__SessionID (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__SessionID(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__SessionID(struct soap*, const unsigned int *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__SessionID(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_IDSP__SessionID(struct soap*, unsigned int *, const char*, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_IDSP__SessionID(struct soap*, const char*, unsigned int *, const char*);

#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

#ifndef SOAP_TYPE_unsignedLong
#define SOAP_TYPE_unsignedLong (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedLong(struct soap*, unsigned long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedLong(struct soap*, const unsigned long *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedLong(struct soap*, const char*, int, const unsigned long *, const char*);
SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_get_unsignedLong(struct soap*, unsigned long *, const char*, const char*);
SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_in_unsignedLong(struct soap*, const char*, unsigned long *, const char*);

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__boolean(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, const bool *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__boolean2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, bool *, const char*, const char*);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__boolean(struct soap*, const char*, bool *);

#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC5 std::string * SOAP_FMAC6 soap_new_std__string(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_std__string(struct soap*, std::string*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC5 struct SOAP_ENV__Fault * SOAP_FMAC6 soap_new_SOAP_ENV__Fault(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC5 struct SOAP_ENV__Reason * SOAP_FMAC6 soap_new_SOAP_ENV__Reason(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC5 struct SOAP_ENV__Detail * SOAP_FMAC6 soap_new_SOAP_ENV__Detail(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC5 struct SOAP_ENV__Code * SOAP_FMAC6 soap_new_SOAP_ENV__Code(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_IDSP__EndSession
#define SOAP_TYPE_IDSP__EndSession (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__EndSession(struct soap*, struct IDSP__EndSession *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__EndSession(struct soap*, const struct IDSP__EndSession *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__EndSession(struct soap*, const struct IDSP__EndSession *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__EndSession(struct soap*, const char*, int, const struct IDSP__EndSession *, const char*);
SOAP_FMAC3 struct IDSP__EndSession * SOAP_FMAC4 soap_get_IDSP__EndSession(struct soap*, struct IDSP__EndSession *, const char*, const char*);
SOAP_FMAC3 struct IDSP__EndSession * SOAP_FMAC4 soap_in_IDSP__EndSession(struct soap*, const char*, struct IDSP__EndSession *, const char*);
SOAP_FMAC5 struct IDSP__EndSession * SOAP_FMAC6 soap_new_IDSP__EndSession(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__EndSession(struct soap*, struct IDSP__EndSession*);
SOAP_FMAC3 struct IDSP__EndSession * SOAP_FMAC4 soap_instantiate_IDSP__EndSession(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__EndSession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP__BeginSession
#define SOAP_TYPE_IDSP__BeginSession (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__BeginSession(struct soap*, struct IDSP__BeginSession *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__BeginSession(struct soap*, const struct IDSP__BeginSession *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__BeginSession(struct soap*, const struct IDSP__BeginSession *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__BeginSession(struct soap*, const char*, int, const struct IDSP__BeginSession *, const char*);
SOAP_FMAC3 struct IDSP__BeginSession * SOAP_FMAC4 soap_get_IDSP__BeginSession(struct soap*, struct IDSP__BeginSession *, const char*, const char*);
SOAP_FMAC3 struct IDSP__BeginSession * SOAP_FMAC4 soap_in_IDSP__BeginSession(struct soap*, const char*, struct IDSP__BeginSession *, const char*);
SOAP_FMAC5 struct IDSP__BeginSession * SOAP_FMAC6 soap_new_IDSP__BeginSession(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__BeginSession(struct soap*, struct IDSP__BeginSession*);
SOAP_FMAC3 struct IDSP__BeginSession * SOAP_FMAC4 soap_instantiate_IDSP__BeginSession(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__BeginSession(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP__BeginSessionResponse
#define SOAP_TYPE_IDSP__BeginSessionResponse (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__BeginSessionResponse(struct soap*, struct IDSP__BeginSessionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__BeginSessionResponse(struct soap*, const struct IDSP__BeginSessionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__BeginSessionResponse(struct soap*, const struct IDSP__BeginSessionResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__BeginSessionResponse(struct soap*, const char*, int, const struct IDSP__BeginSessionResponse *, const char*);
SOAP_FMAC3 struct IDSP__BeginSessionResponse * SOAP_FMAC4 soap_get_IDSP__BeginSessionResponse(struct soap*, struct IDSP__BeginSessionResponse *, const char*, const char*);
SOAP_FMAC3 struct IDSP__BeginSessionResponse * SOAP_FMAC4 soap_in_IDSP__BeginSessionResponse(struct soap*, const char*, struct IDSP__BeginSessionResponse *, const char*);
SOAP_FMAC5 struct IDSP__BeginSessionResponse * SOAP_FMAC6 soap_new_IDSP__BeginSessionResponse(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__BeginSessionResponse(struct soap*, struct IDSP__BeginSessionResponse*);
SOAP_FMAC3 struct IDSP__BeginSessionResponse * SOAP_FMAC4 soap_instantiate_IDSP__BeginSessionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__BeginSessionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP__RunScript
#define SOAP_TYPE_IDSP__RunScript (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__RunScript(struct soap*, struct IDSP__RunScript *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__RunScript(struct soap*, const struct IDSP__RunScript *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__RunScript(struct soap*, const struct IDSP__RunScript *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__RunScript(struct soap*, const char*, int, const struct IDSP__RunScript *, const char*);
SOAP_FMAC3 struct IDSP__RunScript * SOAP_FMAC4 soap_get_IDSP__RunScript(struct soap*, struct IDSP__RunScript *, const char*, const char*);
SOAP_FMAC3 struct IDSP__RunScript * SOAP_FMAC4 soap_in_IDSP__RunScript(struct soap*, const char*, struct IDSP__RunScript *, const char*);
SOAP_FMAC5 struct IDSP__RunScript * SOAP_FMAC6 soap_new_IDSP__RunScript(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__RunScript(struct soap*, struct IDSP__RunScript*);
SOAP_FMAC3 struct IDSP__RunScript * SOAP_FMAC4 soap_instantiate_IDSP__RunScript(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__RunScript(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP__Result
#define SOAP_TYPE_IDSP__Result (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__Result(struct soap*, struct IDSP__Result *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__Result(struct soap*, const struct IDSP__Result *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__Result(struct soap*, const struct IDSP__Result *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__Result(struct soap*, const char*, int, const struct IDSP__Result *, const char*);
SOAP_FMAC3 struct IDSP__Result * SOAP_FMAC4 soap_get_IDSP__Result(struct soap*, struct IDSP__Result *, const char*, const char*);
SOAP_FMAC3 struct IDSP__Result * SOAP_FMAC4 soap_in_IDSP__Result(struct soap*, const char*, struct IDSP__Result *, const char*);
SOAP_FMAC5 struct IDSP__Result * SOAP_FMAC6 soap_new_IDSP__Result(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__Result(struct soap*, struct IDSP__Result*);
SOAP_FMAC3 struct IDSP__Result * SOAP_FMAC4 soap_instantiate_IDSP__Result(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__Result(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC5 struct SOAP_ENV__Header * SOAP_FMAC6 soap_new_SOAP_ENV__Header(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_IDSP__RunScriptResponse
#define SOAP_TYPE_IDSP__RunScriptResponse (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__RunScriptResponse(struct soap*, struct IDSP__RunScriptResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__RunScriptResponse(struct soap*, const struct IDSP__RunScriptResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__RunScriptResponse(struct soap*, const struct IDSP__RunScriptResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__RunScriptResponse(struct soap*, const char*, int, const struct IDSP__RunScriptResponse *, const char*);
SOAP_FMAC3 struct IDSP__RunScriptResponse * SOAP_FMAC4 soap_get_IDSP__RunScriptResponse(struct soap*, struct IDSP__RunScriptResponse *, const char*, const char*);
SOAP_FMAC3 struct IDSP__RunScriptResponse * SOAP_FMAC4 soap_in_IDSP__RunScriptResponse(struct soap*, const char*, struct IDSP__RunScriptResponse *, const char*);
SOAP_FMAC5 struct IDSP__RunScriptResponse * SOAP_FMAC6 soap_new_IDSP__RunScriptResponse(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__RunScriptResponse(struct soap*, struct IDSP__RunScriptResponse*);
SOAP_FMAC3 struct IDSP__RunScriptResponse * SOAP_FMAC4 soap_instantiate_IDSP__RunScriptResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__RunScriptResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP__Record
#define SOAP_TYPE_IDSP__Record (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__Record(struct soap*, struct IDSP__Record *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__Record(struct soap*, struct IDSP__Record const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__Record(struct soap*, const struct IDSP__Record *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__Record(struct soap*, const char*, int, const struct IDSP__Record *, const char*);
SOAP_FMAC3 struct IDSP__Record * SOAP_FMAC4 soap_get_IDSP__Record(struct soap*, struct IDSP__Record *, const char*, const char*);
SOAP_FMAC3 struct IDSP__Record * SOAP_FMAC4 soap_in_IDSP__Record(struct soap*, const char*, struct IDSP__Record *, const char*);
SOAP_FMAC5 struct IDSP__Record * SOAP_FMAC6 soap_new_IDSP__Record(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__Record(struct soap*, struct IDSP__Record*);
SOAP_FMAC3 struct IDSP__Record * SOAP_FMAC4 soap_instantiate_IDSP__Record(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__Record(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP__Field
#define SOAP_TYPE_IDSP__Field (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__Field(struct soap*, struct IDSP__Field *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__Field(struct soap*, const struct IDSP__Field *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__Field(struct soap*, const struct IDSP__Field *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__Field(struct soap*, const char*, int, const struct IDSP__Field *, const char*);
SOAP_FMAC3 struct IDSP__Field * SOAP_FMAC4 soap_get_IDSP__Field(struct soap*, struct IDSP__Field *, const char*, const char*);
SOAP_FMAC3 struct IDSP__Field * SOAP_FMAC4 soap_in_IDSP__Field(struct soap*, const char*, struct IDSP__Field *, const char*);
SOAP_FMAC5 struct IDSP__Field * SOAP_FMAC6 soap_new_IDSP__Field(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__Field(struct soap*, struct IDSP__Field*);
SOAP_FMAC3 struct IDSP__Field * SOAP_FMAC4 soap_instantiate_IDSP__Field(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__Field(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP__ObjectList
#define SOAP_TYPE_IDSP__ObjectList (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__ObjectList(struct soap*, struct IDSP__ObjectList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__ObjectList(struct soap*, struct IDSP__ObjectList const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__ObjectList(struct soap*, const struct IDSP__ObjectList *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__ObjectList(struct soap*, const char*, int, const struct IDSP__ObjectList *, const char*);
SOAP_FMAC3 struct IDSP__ObjectList * SOAP_FMAC4 soap_get_IDSP__ObjectList(struct soap*, struct IDSP__ObjectList *, const char*, const char*);
SOAP_FMAC3 struct IDSP__ObjectList * SOAP_FMAC4 soap_in_IDSP__ObjectList(struct soap*, const char*, struct IDSP__ObjectList *, const char*);
SOAP_FMAC5 struct IDSP__ObjectList * SOAP_FMAC6 soap_new_IDSP__ObjectList(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__ObjectList(struct soap*, struct IDSP__ObjectList*);
SOAP_FMAC3 struct IDSP__ObjectList * SOAP_FMAC4 soap_instantiate_IDSP__ObjectList(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__ObjectList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP__Object
#define SOAP_TYPE_IDSP__Object (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__Object(struct soap*, struct IDSP__Object *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__Object(struct soap*, const struct IDSP__Object *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__Object(struct soap*, const struct IDSP__Object *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__Object(struct soap*, const char*, int, const struct IDSP__Object *, const char*);
SOAP_FMAC3 struct IDSP__Object * SOAP_FMAC4 soap_get_IDSP__Object(struct soap*, struct IDSP__Object *, const char*, const char*);
SOAP_FMAC3 struct IDSP__Object * SOAP_FMAC4 soap_in_IDSP__Object(struct soap*, const char*, struct IDSP__Object *, const char*);
SOAP_FMAC5 struct IDSP__Object * SOAP_FMAC6 soap_new_IDSP__Object(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__Object(struct soap*, struct IDSP__Object*);
SOAP_FMAC3 struct IDSP__Object * SOAP_FMAC4 soap_instantiate_IDSP__Object(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__Object(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP__List
#define SOAP_TYPE_IDSP__List (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__List(struct soap*, struct IDSP__List *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__List(struct soap*, struct IDSP__List const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__List(struct soap*, const struct IDSP__List *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__List(struct soap*, const char*, int, const struct IDSP__List *, const char*);
SOAP_FMAC3 struct IDSP__List * SOAP_FMAC4 soap_get_IDSP__List(struct soap*, struct IDSP__List *, const char*, const char*);
SOAP_FMAC3 struct IDSP__List * SOAP_FMAC4 soap_in_IDSP__List(struct soap*, const char*, struct IDSP__List *, const char*);
SOAP_FMAC5 struct IDSP__List * SOAP_FMAC6 soap_new_IDSP__List(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__List(struct soap*, struct IDSP__List*);
SOAP_FMAC3 struct IDSP__List * SOAP_FMAC4 soap_instantiate_IDSP__List(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__List(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP__Data
#define SOAP_TYPE_IDSP__Data (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__Data(struct soap*, struct IDSP__Data *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__Data(struct soap*, const struct IDSP__Data *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__Data(struct soap*, const struct IDSP__Data *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__Data(struct soap*, const char*, int, const struct IDSP__Data *, const char*);
SOAP_FMAC3 struct IDSP__Data * SOAP_FMAC4 soap_get_IDSP__Data(struct soap*, struct IDSP__Data *, const char*, const char*);
SOAP_FMAC3 struct IDSP__Data * SOAP_FMAC4 soap_in_IDSP__Data(struct soap*, const char*, struct IDSP__Data *, const char*);
SOAP_FMAC5 struct IDSP__Data * SOAP_FMAC6 soap_new_IDSP__Data(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__Data(struct soap*, struct IDSP__Data*);
SOAP_FMAC3 struct IDSP__Data * SOAP_FMAC4 soap_instantiate_IDSP__Data(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__Data(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP__RunScriptParameters
#define SOAP_TYPE_IDSP__RunScriptParameters (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP__RunScriptParameters(struct soap*, struct IDSP__RunScriptParameters *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP__RunScriptParameters(struct soap*, const struct IDSP__RunScriptParameters *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP__RunScriptParameters(struct soap*, const struct IDSP__RunScriptParameters *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP__RunScriptParameters(struct soap*, const char*, int, const struct IDSP__RunScriptParameters *, const char*);
SOAP_FMAC3 struct IDSP__RunScriptParameters * SOAP_FMAC4 soap_get_IDSP__RunScriptParameters(struct soap*, struct IDSP__RunScriptParameters *, const char*, const char*);
SOAP_FMAC3 struct IDSP__RunScriptParameters * SOAP_FMAC4 soap_in_IDSP__RunScriptParameters(struct soap*, const char*, struct IDSP__RunScriptParameters *, const char*);
SOAP_FMAC5 struct IDSP__RunScriptParameters * SOAP_FMAC6 soap_new_IDSP__RunScriptParameters(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP__RunScriptParameters(struct soap*, struct IDSP__RunScriptParameters*);
SOAP_FMAC3 struct IDSP__RunScriptParameters * SOAP_FMAC4 soap_instantiate_IDSP__RunScriptParameters(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP__RunScriptParameters(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_IDSP_ScriptArg
#define SOAP_TYPE_IDSP_ScriptArg (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_IDSP_ScriptArg(struct soap*, struct IDSP_ScriptArg *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_IDSP_ScriptArg(struct soap*, const struct IDSP_ScriptArg *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_IDSP_ScriptArg(struct soap*, const struct IDSP_ScriptArg *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_IDSP_ScriptArg(struct soap*, const char*, int, const struct IDSP_ScriptArg *, const char*);
SOAP_FMAC3 struct IDSP_ScriptArg * SOAP_FMAC4 soap_get_IDSP_ScriptArg(struct soap*, struct IDSP_ScriptArg *, const char*, const char*);
SOAP_FMAC3 struct IDSP_ScriptArg * SOAP_FMAC4 soap_in_IDSP_ScriptArg(struct soap*, const char*, struct IDSP_ScriptArg *, const char*);
SOAP_FMAC5 struct IDSP_ScriptArg * SOAP_FMAC6 soap_new_IDSP_ScriptArg(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_IDSP_ScriptArg(struct soap*, struct IDSP_ScriptArg*);
SOAP_FMAC3 struct IDSP_ScriptArg * SOAP_FMAC4 soap_instantiate_IDSP_ScriptArg(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_IDSP_ScriptArg(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#endif

#ifndef SOAP_TYPE_PointerToIDSP__Result
#define SOAP_TYPE_PointerToIDSP__Result (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToIDSP__Result(struct soap*, struct IDSP__Result *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToIDSP__Result(struct soap*, struct IDSP__Result *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToIDSP__Result(struct soap*, const char *, int, struct IDSP__Result *const*, const char *);
SOAP_FMAC3 struct IDSP__Result ** SOAP_FMAC4 soap_get_PointerToIDSP__Result(struct soap*, struct IDSP__Result **, const char*, const char*);
SOAP_FMAC3 struct IDSP__Result ** SOAP_FMAC4 soap_in_PointerToIDSP__Result(struct soap*, const char*, struct IDSP__Result **, const char*);

#ifndef SOAP_TYPE_PointerToIDSP__RunScriptParameters
#define SOAP_TYPE_PointerToIDSP__RunScriptParameters (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToIDSP__RunScriptParameters(struct soap*, struct IDSP__RunScriptParameters *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToIDSP__RunScriptParameters(struct soap*, struct IDSP__RunScriptParameters *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToIDSP__RunScriptParameters(struct soap*, const char *, int, struct IDSP__RunScriptParameters *const*, const char *);
SOAP_FMAC3 struct IDSP__RunScriptParameters ** SOAP_FMAC4 soap_get_PointerToIDSP__RunScriptParameters(struct soap*, struct IDSP__RunScriptParameters **, const char*, const char*);
SOAP_FMAC3 struct IDSP__RunScriptParameters ** SOAP_FMAC4 soap_in_PointerToIDSP__RunScriptParameters(struct soap*, const char*, struct IDSP__RunScriptParameters **, const char*);

#ifndef SOAP_TYPE_PointerToIDSP__Field
#define SOAP_TYPE_PointerToIDSP__Field (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToIDSP__Field(struct soap*, struct IDSP__Field *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToIDSP__Field(struct soap*, struct IDSP__Field *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToIDSP__Field(struct soap*, const char *, int, struct IDSP__Field *const*, const char *);
SOAP_FMAC3 struct IDSP__Field ** SOAP_FMAC4 soap_get_PointerToIDSP__Field(struct soap*, struct IDSP__Field **, const char*, const char*);
SOAP_FMAC3 struct IDSP__Field ** SOAP_FMAC4 soap_in_PointerToIDSP__Field(struct soap*, const char*, struct IDSP__Field **, const char*);

#ifndef SOAP_TYPE_PointerToIDSP__Object
#define SOAP_TYPE_PointerToIDSP__Object (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToIDSP__Object(struct soap*, struct IDSP__Object *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToIDSP__Object(struct soap*, struct IDSP__Object *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToIDSP__Object(struct soap*, const char *, int, struct IDSP__Object *const*, const char *);
SOAP_FMAC3 struct IDSP__Object ** SOAP_FMAC4 soap_get_PointerToIDSP__Object(struct soap*, struct IDSP__Object **, const char*, const char*);
SOAP_FMAC3 struct IDSP__Object ** SOAP_FMAC4 soap_in_PointerToIDSP__Object(struct soap*, const char*, struct IDSP__Object **, const char*);

#ifndef SOAP_TYPE_PointerToIDSP__Data
#define SOAP_TYPE_PointerToIDSP__Data (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToIDSP__Data(struct soap*, struct IDSP__Data *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToIDSP__Data(struct soap*, struct IDSP__Data *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToIDSP__Data(struct soap*, const char *, int, struct IDSP__Data *const*, const char *);
SOAP_FMAC3 struct IDSP__Data ** SOAP_FMAC4 soap_get_PointerToIDSP__Data(struct soap*, struct IDSP__Data **, const char*, const char*);
SOAP_FMAC3 struct IDSP__Data ** SOAP_FMAC4 soap_in_PointerToIDSP__Data(struct soap*, const char*, struct IDSP__Data **, const char*);

#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOfIDSP_ScriptArg
#define SOAP_TYPE_PointerTostd__vectorTemplateOfIDSP_ScriptArg (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOfIDSP_ScriptArg(struct soap*, std::vector<struct IDSP_ScriptArg >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOfIDSP_ScriptArg(struct soap*, std::vector<struct IDSP_ScriptArg >*const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOfIDSP_ScriptArg(struct soap*, const char *, int, std::vector<struct IDSP_ScriptArg >*const*, const char *);
SOAP_FMAC3 std::vector<struct IDSP_ScriptArg >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOfIDSP_ScriptArg(struct soap*, std::vector<struct IDSP_ScriptArg >**, const char*, const char*);
SOAP_FMAC3 std::vector<struct IDSP_ScriptArg >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOfIDSP_ScriptArg(struct soap*, const char*, std::vector<struct IDSP_ScriptArg >**, const char*);

#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__dateTime(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__dateTime(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__dateTime(struct soap*, char *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__dateTime(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__dateTime(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__dateTime(struct soap*, const char*, char **, const char*);

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__anyURI(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, char *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, char **, const char*);

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__string(struct soap*, char *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__string(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, char **, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__QName(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfIDSP_ScriptArg
#define SOAP_TYPE_std__vectorTemplateOfIDSP_ScriptArg (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfIDSP_ScriptArg(struct soap*, std::vector<struct IDSP_ScriptArg >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfIDSP_ScriptArg(struct soap*, const std::vector<struct IDSP_ScriptArg >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfIDSP_ScriptArg(struct soap*, const char*, int, const std::vector<struct IDSP_ScriptArg >*, const char*);
SOAP_FMAC3 std::vector<struct IDSP_ScriptArg >* SOAP_FMAC4 soap_in_std__vectorTemplateOfIDSP_ScriptArg(struct soap*, const char*, std::vector<struct IDSP_ScriptArg >*, const char*);
SOAP_FMAC5 std::vector<struct IDSP_ScriptArg > * SOAP_FMAC6 soap_new_std__vectorTemplateOfIDSP_ScriptArg(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_std__vectorTemplateOfIDSP_ScriptArg(struct soap*, std::vector<struct IDSP_ScriptArg >*);
SOAP_FMAC3 std::vector<struct IDSP_ScriptArg > * SOAP_FMAC4 soap_instantiate_std__vectorTemplateOfIDSP_ScriptArg(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfIDSP_ScriptArg(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
